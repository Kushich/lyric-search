{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.jsx","context.js","components/layout/Spinner.js","components/tracks/Track.jsx","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.jsx","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","undefined","length","Fragment","map","item","key","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","format","updated_time","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d46c3de7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.26ef8bb4.gif\";","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n        <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'SEARCH_TRACKS':\r\n    return {\r\n      ...state,\r\n      track_list: action.payload,\r\n      heading: 'Search Results'\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: 'Top 10 Tracks',\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=uk&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n      .then(res => {\r\n        this.setState({track_list: res.data.message.body.track_list})\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return <Context.Provider value={this.state}>\r\n      {this.props.children}\r\n    </Context.Provider>\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div>\r\n      <img \r\n        src={spinner} \r\n        alt=\"Loading...\"\r\n        style={{width: '200px', margin: '40px auto', display: 'block'}}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Track({ track }) {\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5>{track.artist_name}</h5>\r\n          <p className=\"card-text\">\r\n            <strong><i className=\"fas fa-play\"></i> Track</strong>: {track.track_name}\r\n            <br />\r\n            <strong><i className=\"fas fa-compact-disc\"></i> Album</strong>: {track.album_name}\r\n          </p>\r\n          <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n            <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Track\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport Spinner from '../layout/Spinner'\r\nimport Track from './Track'\r\n\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { track_list, heading } = value\r\n          if(track_list === undefined || track_list.length === 0) {\r\n            return <Spinner />\r\n          } else {\r\n            return (\r\n              <React.Fragment>\r\n                <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                <div className=\"row\">\r\n                  {track_list.map(item => (\r\n                    <Track key={item.track.track_id} track={item.track}/>\r\n                  ))}\r\n                </div>\r\n                </React.Fragment>\r\n            )\r\n          }\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Consumer } from '../../context'\r\n\r\nexport default class Search extends Component {\r\n  state = {\r\n    trackTitle: ''\r\n  }\r\n  findTrack = (dispatch, e) => {\r\n    e.preventDefault()\r\n    axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'SEARCH_TRACKS',\r\n          payload: res.data.message.body.track_list\r\n        })\r\n        this.setState({trackTitle: ''})\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <i className=\"fas fa-music\" /> Search For A Song\r\n              </h1>\r\n              <p className=\"lead text-center\">Get the lyrics for any song</p>\r\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Song title...\" name=\"trackTitle\" value={this.state.trackTitle} onChange={this.onChange}/>\r\n                </div>\r\n                <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n              </form>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Tracks from '../tracks/Tracks'\r\nimport Search from '../tracks/Search'\r\n\r\nfunction Index() {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Tracks />\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Index\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../layout/Spinner'\r\nimport Moment from 'react-moment'\r\n\r\nexport default class Lyrics extends Component {\r\n\r\n  state = {\r\n    track: {},\r\n    lyrics: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n    .then(res => {\r\n      this.setState({lyrics: res.data.message.body.lyrics})\r\n\r\n      return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n      .then(res => {\r\n        this.setState({track: res.data.message.body.track})\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    const { track, lyrics } = this.state\r\n    if (track === undefined || lyrics === undefined || Object.keys(lyrics).length === 0 || Object.keys(track).length === 0) {\r\n      return <Spinner />\r\n    }\r\n    else {\r\n      return (\r\n        <React.Fragment>\r\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go back</Link>\r\n          <div className=\"card\">\r\n            <h5 className=\"card-header\">\r\n              {track.track_name} by {' '}\r\n              <span className=\"text-secondary\">\r\n                {track.artist_name}\r\n              </span>\r\n            </h5>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-\">{lyrics.lyrics_body}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <ul className=\"list-group mt-3\">\r\n            <li className=\"list-group-item\">\r\n              <strong>Album ID</strong>: {track.album_id}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Song Genre</strong>: {' '}\r\n              {\r\n                track.primary_genres.music_genre_list[0].music_genre.music_genre_name\r\n              }\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Explicit Words</strong>: {track.explicit === 0 ? 'No' : 'Yes'}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Release Date</strong>: <Moment format=\"MM/DD/YYYY\">{track.updated_time}</Moment>\r\n            </li>\r\n          </ul>\r\n      \r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Index from './components/layout/Index'\nimport Lyrics from './components/tracks/Lyrics'\n\nimport { Provider } from './context'\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <React.Fragment >\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/lyric-search/\" component={Index} />\n              <Route exact path=\"/lyric-search/lyrics/track/:id\" component={Lyrics} />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}